{"version":3,"sources":["book.js","bookshelf.js","bookApi.js","addBook.js","app.js","index.js"],"names":["Book","props","tags","map","tag","className","href","url","target","title","Bookshelf","query","submitQuery","bookGrids","books","book","type","id","placeholder","onChange","event","value","to","bookUrl","process","token","localStorage","Math","random","toString","substr","headers","search","bookFilter","fetch","method","body","JSON","stringify","then","res","json","data","AddBook","state","description","handleChange","bind","handleAddBook","preventDefault","this","trim","split","filter","hashtags","charAt","bookToAdd","bookList","setState","name","onSubmit","required","React","Component","App","handleSearch","searchValue","includes","console","log","searchResults","basename","exact","path","render","history","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.689fcccc.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./style.css\"\n\n\nfunction Book(props) {\n    const tags = props.tags.map((tag) => {\n        return (\n        <div>{tag}</div>\n        )\n    })\n    return (\n        <div className=\"book\">\n            <div className=\"book-title\"><a className=\"book-url\" href={props.url} target=\"_blank\">{props.title}</a></div>\n            <div className=\"book-tags\">{tags}</div>\n        </div>\n    )\n}\n\n\n// class Book extends React.Component {\n//     constructor(props) {\n//        super(props);\n//     }\n\n//     render() {\n//         const book = this.props\n//         return (\n//             <li>\n//                 <div className=\"book\">\n//         <div className=\"book-title\">{book.title}</div>\n//                 </div>\n//             </li>\n//         )\n//     }\n// }\n\n\nexport default Book;\n","import React from \"react\"\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport Book from \"./book.js\"\nimport \"./style.css\"\n\n\nfunction Bookshelf(props) {\n\n    const {query, submitQuery, books} = props;\n    const bookGrids = books.map((book) => {\n        return (\n            <div className=\"bookshelf\">\n                <li>\n                    <Book title={book.title} url={book.url} tags={book.tags}/>\n                </li>\n            </div>\n        )\n    })\n\n    return (\n        <div className=\"bookshelf\">\n            <h1>Bookshelf</h1>\n            <div className=\"search-bar-container\">\n                <input type=\"text\" id=\"search-bar\" placeholder=\"book name, author, or any #tag! (Temp: #tag search only !)\" onChange={(event)=>submitQuery(event)} value={query}></input>\n                {/* <SearchBar submitQuery={submitQuery} query={query}/> */}\n            </div>\n\n            <div className=\"search-results\">\n                <ol>\n                    {bookGrids}\n                </ol>\n            </div>\n            <div className=\"open-add-book\">\n                {/* <BrowserRouter basename={process.env.PUBLIC_URL}> */}\n                <Link to=\"/addBook\"><button>Add a book</button></Link>\n                {/* </BrowserRouter> */}\n            </div>\n        </div>\n    )\n}\n\n\nexport default Bookshelf;\n","// import dotenv from 'dotenv'\n\n// const bookUrl = \"http://localhost:8000\";\nconst bookUrl = process.env.REACT_APP_BOOK_URL;\n\nlet token = localStorage.token\nif (!token) {\n    token = localStorage.token = Math.random().toString(36).substr(-8)\n}\n\nconst headers = {\n    'Accept': 'application/json',\n    'Authorization': token\n}\n\nexport const search = (bookFilter) =>\n    fetch(`${bookUrl}/book`, {\n        method: 'POST',\n        headers: {\n            ...headers,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bookFilter)\n    }).then(res => res.json()).then(data => data.books)\n\n    \nexport const create = (bookList) =>\n    fetch(`${bookUrl}/book/bulk`, {\n        method: 'POST',\n        headers: {\n            ...headers,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bookList)\n    }).then(res => res.json())\n\n\nexport const update = (bookFilter, book) =>\n    fetch(`${bookUrl}/book`, {\n        method: 'PUT',\n        headers: {\n            ...headers,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({bookFilter, book})\n    }).then(res => res.json())\n\n\nexport const remove = (bookFilter) => \n    fetch(`${bookUrl}/book`, {\n        method: 'DELETE',\n        headers: {\n            ...headers,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({bookFilter})\n    }).then(res => res.json())","import React from \"react\"\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport {create} from \"./bookApi.js\"\nimport \"./style.css\"\n\n\nclass AddBook extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"\",\n            url: \"\",\n            tags: [],\n            description: \"\",\n        }\n        this.handleChange = this.handleChange.bind(this);\n        // this.handleTitleChange = this.handleTitleChange.bind(this);\n        // this.handleUrlChange = this.handleUrlChange.bind(this);\n        // this.handleTagsChange = this.handleTagsChange.bind(this);\n        // this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n        this.handleAddBook = this.handleAddBook.bind(this);\n    }\n\n    async handleAddBook(event) {\n        event.preventDefault();\n        \n        const tags = this.state.tags.trim().split(/\\s+/).filter(tag => tag);\n        const hashtags = tags.map(tag => (tag.charAt(0) === \"#\") ? tag:`#${tag}`);\n\n        const bookToAdd = {\n            title: this.state.title.trim(),\n            tags: hashtags,\n            url: this.state.url.trim(),\n            description: this.state.description.trim(),\n        }\n        const addBookResults = await create([bookToAdd]);\n        \n        // reset states\n        this.setState({\n            title: \"\",\n            url: \"\",\n            tags: \"\",\n            description: \"\",\n        })\n        \n\t}\n\n    handleChange(event) {\n        let name = event.target.name;\n        let value = event.target.value;\n        this.setState({[name]: value});\n    }\n    // handleTitleChange(event) {\n    //     this.setState({title: event.target.value.trim()})\n    // }\n\n    // handleUrlChange(event) {\n    //     this.setState({url: event.target.value.trim()})\n    // }\n\n    // handleTagsChange(event) {\n    //     const tags = event.target.value.trim().split(/\\s+/).filter(tag => tag);\n    //     const hashtags = tags.map(tag => (tag.charAt(0) === \"#\") ? tag:`#${tag}`);\n    //     this.setState({tags: hashtags})\n    //     console.log(this.state)\n    // }\n\n    // handleDescriptionChange(event) {\n    //     this.setState({description: event.target.value.trim()})\n    // }\n\n    render() {\n        return (\n            <div className=\"add-book-container\">\n                <h1>Add a new book</h1>\n                <form onSubmit={this.handleAddBook}>\n                {/* <div className=\"form\"> */}\n                    <span>\n                        <div className=\"label\">Title</div>\n                        <div className=\"input\">\n                            <input name=\"title\" type=\"text\" id=\"title\" placeholder=\"e.g Attention is all your need\" onChange={this.handleChange}  value={this.state.title} required></input>\n                        </div>\n                    </span>\n                    <span>\n                        <div className=\"url\">URL</div>\n                        <div className=\"input\">\n                            <input name=\"url\" type=\"url\" id=\"url\" placeholder=\"e.g https://arxiv.org/pdf/1706.03762.pdf\" onChange={this.handleChange} value={this.state.url} required></input>\n                        </div>\n                    </span>\n                    <span>\n                        <div className=\"tags\">Tags</div>\n                        <div className=\"input\">\n                            <input name=\"tags\" type=\"text\" id=\"tags\" placeholder=\"#Transformer #Attention\" onChange={this.handleChange} value={this.state.tags} required></input>\n                        </div> \n                    </span>\n                    <span>\n                        <div className=\"description\">Description</div>\n                        <div className=\"input\">\n                            <input name=\"description\" type=\"text\" id=\"description\" placeholder=\"e.g This is for your attention~\" onChange={this.handleChange} value={this.state.description} required></input>\n                        </div> \n                    </span>\n                    <span>\n                        <div className=\"add-button\">\n                            <button type=\"submit\">Add</button>\n                        </div>\n                    </span>\n                {/* </div> */}\n                </form>\n                <div className=\"open-search\">\n                    {/* <BrowserRouter basename={process.env.PUBLIC_URL}> */}\n                    <Link to=\"/\">back to search</Link>\n                    {/* </BrowserRouter> */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddBook;\n","import React from \"react\"\n// import Container from '@material-ui/core/Container';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\n\n// import SearchBar from \"./searchBar.js\"\nimport Bookshelf from \"./bookshelf.js\"\nimport AddBook from \"./addBook.js\"\nimport {search} from \"./bookApi.js\"\n\nimport \"./style.css\"\n\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleSearch = this.handleSearch.bind(this);\n\t\t// this.handleAddBook = this.handleAddBook.bind(this);\n\t\tthis.state = {\n\t\t\tbooks: [],\n\t\t\tsearchValue: \"\"\n\t\t}\n\t}\n\t\n\tasync handleSearch(event) {\n\n\t\tconst searchValue = event.target.value;\n\t\tthis.setState({searchValue: searchValue});\n\t\t// temp: tags search only\n\t\tlet bookFilter = {\n\t\t\ttags: [],\n\t\t}\n\t\tif (this.state.searchValue.includes(\"#\")) {\n\t\t\tconst tags = this.state.searchValue.split(/\\s+/).filter(tag => tag);\n\t\t\tconst hashtags = tags.map(tag => (tag.charAt(0) === \"#\") ? tag:`#${tag}`);\n\t\t\tbookFilter.tags = hashtags;\n\t\t}\n\t\tconsole.log(bookFilter);\n\t\t\n\t\tconst searchResults = await search(bookFilter);\n\t\t// console.log(searchResults);\n\t\tthis.setState((state) => ({books: searchResults}));\n\t}\n\n\t// async handleAddBook(event) {\n\t// \tconst bookToAdd = event.target.value;\n\n\t// \tconsole.log(bookToAdd);\n\t// \t// const addBookResults = await create(bookToAdd);\n\t// }\n\n\trender() {\n\t\t// console.log(this.state);\n\t\tconst {books, searchValue} = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t{/* <h1>Book Shelf</h1> */}\n\t\t\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" render={({history})=>(\n\t\t\t\t\t\t\t// <SearchBar query={searchValue} ={this.handleSearch}/>\n\t\t\t\t\t\t\t<Bookshelf query={searchValue} submitQuery={this.handleSearch} books={books}/>\n\t\t\t\t\t\t)}/>\n\t\t\t\t\t\t<Route exact path=\"/addBook\" render={({history})=>(\n\t\t\t\t\t\t\t// <SearchBar query={searchValue} ={this.handleSearch}/>\n\t\t\t\t\t\t\t<AddBook />\n\t\t\t\t\t\t)}/>\n\t\t\t\t\t</Switch>\n\t\t\t\t</BrowserRouter>\n\t\t\t</div>\n\t\t)\n\t\t\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './app';\n\n\nReactDOM.render(\n    <BrowserRouter><App /></BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}